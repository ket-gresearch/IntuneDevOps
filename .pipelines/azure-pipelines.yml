# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
 - group: IntuneREAD
# parameters:
#   - name: debug
#     displayName: Debug mode
#     type: boolean
#     default: false
#   - name: confType
#     displayName: Config Type
#     type: string
#     values:
#     - config-profile
#     - compliance-policy
#     - script
#     - remediation-script
#     - filter 

pool:
  vmImage: windows-latest
  #vmImage: 'ubuntu-latest' 

stages:
- stage: validate
  displayName: Show input
  jobs:
  - job: print_input
    displayName: Print Input
    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $authBody=@{
              client_id=$(CLIENT_ID)
              client_secret=$(CLIENT_SECRET)
              scope="https://graph.microsoft.com/.default"
              grant_type="client_credentials"
          }

          write-host $authBody

          $uri="https://login.microsoftonline.com/$(TENANT_ID)/oauth2/v2.0/token"

          write-host $uri
          $accessToken=Invoke-WebRequest -Uri $uri -ContentType "application/x-www-form-urlencoded" -Body $authBody -Method Post -ErrorAction Stop -UseBasicParsing -verbose
          $accessToken=$accessToken.content | ConvertFrom-Json

          write-host $accessToken

          $authHeader = @{
              'Content-Type'='application/json'
              'Authorization'="Bearer " + $accessToken.access_token
              'ExpiresOn'=$accessToken.expires_in
          }

          return $authHeader

          #$global:authToken = Get-AuthHeader -tenantId $(TENANT_ID) -clientId $(CLIENT_ID) -clientSecret $(CLIENT_SECRET)
          #return Invoke-RestMethod -Uri https://graph.microsoft.com/beta/deviceManagement/deviceConfigurations/333b23ed-8232-4b47-a397-8628715b3621 -Headers $authToken -Method GET

# - stage: getSourceObject
#   displayName: Get source object from dev
#   jobs:
#   - job: get_object_from_dev
#     displayName: Get object from dev
#     steps:
#     - task: PowerShell@2
#       inputs:
#         filePath: '$(System.DefaultWorkingDirectory)/Get-IntuneObject.ps1'
#         arguments: '-tenantId $(TENANT_ID) -clientId $(CLIENT_ID) -clientSecret $(CLIENT_SECRET) -type ${{parameters.confType}} -objectId ${{parameters.objectId}}'
#     - task: CopyFiles@2
#       displayName: "Intune object to: $(build.artifactstagingdirectory)'"
#       inputs:
#         Contents: intuneObject.json
#         TargetFolder: $(build.artifactstagingdirectory)
#         flattenFolders: true
#     - publish: ' $(build.artifactstagingdirectory)'
#       displayName: 'Publish intune config json'
#       artifact: 'package'

# - stage: publishToProd
#   displayName: Publish object to prod
#   jobs:
#   # Download artifact
#   - job: publish_to_prod
#     displayName: Publish object to prod
#     steps:
#     - task: DownloadPipelineArtifact@2
#       displayName: 'Download Pipeline Artifact'
#       inputs:
#         artifactName: 'package'

    # - task: PowerShell@2
    #   inputs:
    #     filePath: '$(System.DefaultWorkingDirectory)/Deploy-IntuneObject.ps1'
    #     arguments: '-tenantId $(ProdTenantId) -clientId $(ProdAppId) -clientSecret $(ProdAppSecret) -type ${{parameters.confType}} -path "$(Pipeline.Workspace)/intuneObject.json"'

